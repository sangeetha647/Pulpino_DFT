-1 -1 -1 SYNTHESIS "1" 
1 63 63 DBG_AXI_REGSELECT_SIZE "1" 
1 64 64 DBG_AXI_NUM_INTREG "1" 
1 68 68 DBG_AXI_INTREG_ERROR "1'b0" 
1 85 85 DBG_AXI_CMD_BWRITE8 "4'h1" 
1 86 86 DBG_AXI_CMD_BWRITE16 "4'h2" 
1 87 87 DBG_AXI_CMD_BWRITE32 "4'h3" 
1 88 88 DBG_AXI_CMD_BWRITE64 "4'h4" 
1 89 89 DBG_AXI_CMD_BREAD8 "4'h5" 
1 90 90 DBG_AXI_CMD_BREAD16 "4'h6" 
1 91 91 DBG_AXI_CMD_BREAD32 "4'h7" 
1 92 92 DBG_AXI_CMD_BREAD64 "4'h8" 
1 93 93 DBG_AXI_CMD_IREG_WR "4'h9" 
1 94 94 DBG_AXI_CMD_IREG_SEL "4'hd" 
3 42 42 DBG_TOP_MODULE_ID_LENGTH "2" 
3 45 45 DBG_TOP_MAX_MODULES "4" 
3 48 48 DBG_TOP_WISHBONE_DEBUG_MODULE "2'h0" 
3 49 49 DBG_TOP_CPU0_DEBUG_MODULE "2'h1" 
3 50 50 DBG_TOP_CPU1_DEBUG_MODULE "2'h2" 
3 51 51 DBG_TOP_JSP_DEBUG_MODULE "2'h3" 
3 54 54 DBG_TOP_MODULE_DATA_LEN "64" 
3 58 58 DBG_WISHBONE_SUPPORTED "" 
3 61 61 DBG_CPU0_SUPPORTED "" 
3 67 67 DBG_JSP_SUPPORTED "" 
3 71 71 ADBG_JSP_SUPPORT_MULTI "" 
3 75 75 ADBG_USE_HISPEED "" 
4 63 63 DBG_AXI_REGSELECT_SIZE "1" 
4 64 64 DBG_AXI_NUM_INTREG "1" 
4 68 68 DBG_AXI_INTREG_ERROR "1'b0" 
4 85 85 DBG_AXI_CMD_BWRITE8 "4'h1" 
4 86 86 DBG_AXI_CMD_BWRITE16 "4'h2" 
4 87 87 DBG_AXI_CMD_BWRITE32 "4'h3" 
4 88 88 DBG_AXI_CMD_BWRITE64 "4'h4" 
4 89 89 DBG_AXI_CMD_BREAD8 "4'h5" 
4 90 90 DBG_AXI_CMD_BREAD16 "4'h6" 
4 91 91 DBG_AXI_CMD_BREAD32 "4'h7" 
4 92 92 DBG_AXI_CMD_BREAD64 "4'h8" 
4 93 93 DBG_AXI_CMD_IREG_WR "4'h9" 
4 94 94 DBG_AXI_CMD_IREG_SEL "4'hd" 
6 42 42 DBG_TOP_MODULE_ID_LENGTH "2" 
6 45 45 DBG_TOP_MAX_MODULES "4" 
6 48 48 DBG_TOP_WISHBONE_DEBUG_MODULE "2'h0" 
6 49 49 DBG_TOP_CPU0_DEBUG_MODULE "2'h1" 
6 50 50 DBG_TOP_CPU1_DEBUG_MODULE "2'h2" 
6 51 51 DBG_TOP_JSP_DEBUG_MODULE "2'h3" 
6 54 54 DBG_TOP_MODULE_DATA_LEN "64" 
6 58 58 DBG_WISHBONE_SUPPORTED "" 
6 61 61 DBG_CPU0_SUPPORTED "" 
6 67 67 DBG_JSP_SUPPORTED "" 
6 71 71 ADBG_JSP_SUPPORT_MULTI "" 
6 75 75 ADBG_USE_HISPEED "" 
7 264 264 STATE_IDLE "1'h0" 
7 265 265 STATE_TRANSFER "1'h1" 
8 65 65 DBG_OR1K_INTREG_STATUS "3'b000" 
8 80 80 DBG_OR1K_CMD_BWRITE32 "4'h3" 
8 81 81 DBG_OR1K_CMD_BREAD32 "4'h7" 
8 82 82 DBG_OR1K_CMD_IREG_WR "4'h9" 
8 83 83 DBG_OR1K_CMD_IREG_SEL "4'hd" 
10 42 42 DBG_TOP_MODULE_ID_LENGTH "2" 
10 45 45 DBG_TOP_MAX_MODULES "4" 
10 48 48 DBG_TOP_WISHBONE_DEBUG_MODULE "2'h0" 
10 49 49 DBG_TOP_CPU0_DEBUG_MODULE "2'h1" 
10 50 50 DBG_TOP_CPU1_DEBUG_MODULE "2'h2" 
10 51 51 DBG_TOP_JSP_DEBUG_MODULE "2'h3" 
10 54 54 DBG_TOP_MODULE_DATA_LEN "64" 
10 58 58 DBG_WISHBONE_SUPPORTED "" 
10 61 61 DBG_CPU0_SUPPORTED "" 
10 67 67 DBG_JSP_SUPPORTED "" 
10 71 71 ADBG_JSP_SUPPORT_MULTI "" 
10 75 75 ADBG_USE_HISPEED "" 
11 65 65 DBG_OR1K_INTREG_STATUS "3'b000" 
11 80 80 DBG_OR1K_CMD_BWRITE32 "4'h3" 
11 81 81 DBG_OR1K_CMD_BREAD32 "4'h7" 
11 82 82 DBG_OR1K_CMD_IREG_WR "4'h9" 
11 83 83 DBG_OR1K_CMD_IREG_SEL "4'hd" 
13 65 65 DBG_OR1K_INTREG_STATUS "3'b000" 
13 80 80 DBG_OR1K_CMD_BWRITE32 "4'h3" 
13 81 81 DBG_OR1K_CMD_BREAD32 "4'h7" 
13 82 82 DBG_OR1K_CMD_IREG_WR "4'h9" 
13 83 83 DBG_OR1K_CMD_IREG_SEL "4'hd" 
14 63 63 IDCODE_VALUE "32'h249511c3" 
14 70 70 IR_LENGTH "4" 
14 73 73 EXTEST "4'b0000" 
14 74 74 SAMPLE_PRELOAD "4'b0001" 
14 75 75 IDCODE "4'b0010" 
14 76 76 DEBUG "4'b1000" 
14 77 77 MBIST "4'b1001" 
14 78 78 BYPASS "4'b1111" 
16 63 63 IDCODE_VALUE "32'h249511c3" 
16 70 70 IR_LENGTH "4" 
16 73 73 EXTEST "4'b0000" 
16 74 74 SAMPLE_PRELOAD "4'b0001" 
16 75 75 IDCODE "4'b0010" 
16 76 76 DEBUG "4'b1000" 
16 77 77 MBIST "4'b1001" 
16 78 78 BYPASS "4'b1111" 
15 203 203 STATE_test_logic_reset "4'hF" 
15 204 204 STATE_run_test_idle "4'hC" 
15 205 205 STATE_select_dr_scan "4'h7" 
15 206 206 STATE_capture_dr "4'h6" 
15 207 207 STATE_shift_dr "4'h2" 
15 208 208 STATE_exit1_dr "4'h1" 
15 209 209 STATE_pause_dr "4'h3" 
15 210 210 STATE_exit2_dr "4'h0" 
15 211 211 STATE_update_dr "4'h5" 
15 212 212 STATE_select_ir_scan "4'h4" 
15 213 213 STATE_capture_ir "4'hE" 
15 214 214 STATE_shift_ir "4'hA" 
15 215 215 STATE_exit1_ir "4'h9" 
15 216 216 STATE_pause_ir "4'hB" 
15 217 217 STATE_exit2_ir "4'h8" 
15 218 218 STATE_update_ir "4'hD" 
18 42 42 DBG_TOP_MODULE_ID_LENGTH "2" 
18 45 45 DBG_TOP_MAX_MODULES "4" 
18 48 48 DBG_TOP_WISHBONE_DEBUG_MODULE "2'h0" 
18 49 49 DBG_TOP_CPU0_DEBUG_MODULE "2'h1" 
18 50 50 DBG_TOP_CPU1_DEBUG_MODULE "2'h2" 
18 51 51 DBG_TOP_JSP_DEBUG_MODULE "2'h3" 
18 54 54 DBG_TOP_MODULE_DATA_LEN "64" 
18 58 58 DBG_WISHBONE_SUPPORTED "" 
18 61 61 DBG_CPU0_SUPPORTED "" 
18 67 67 DBG_JSP_SUPPORTED "" 
18 71 71 ADBG_JSP_SUPPORT_MULTI "" 
18 75 75 ADBG_USE_HISPEED "" 
21 13 13 APB_BUS_SV "" 
22 12 12 CONFIG_SV "" 
22 13 13 RISCV "" 
22 17 17 ASIC "" 
22 22 22 ROM_ADDR_WIDTH "12" 
22 23 23 ROM_START_ADDR "32'h8000" 
21 18 18 NB_MASTER "9" 
21 21 21 UART_START_ADDR "32'h1A10_0000" 
21 22 22 UART_END_ADDR "32'h1A10_0FFF" 
21 25 25 GPIO_START_ADDR "32'h1A10_1000" 
21 26 26 GPIO_END_ADDR "32'h1A10_1FFF" 
21 29 29 SPI_START_ADDR "32'h1A10_2000" 
21 30 30 SPI_END_ADDR "32'h1A10_2FFF" 
21 33 33 TIMER_START_ADDR "32'h1A10_3000" 
21 34 34 TIMER_END_ADDR "32'h1A10_3FFF" 
21 37 37 EVENT_UNIT_START_ADDR "32'h1A10_4000" 
21 38 38 EVENT_UNIT_END_ADDR "32'h1A10_4FFF" 
21 41 41 I2C_START_ADDR "32'h1A10_5000" 
21 42 42 I2C_END_ADDR "32'h1A10_5FFF" 
21 45 45 FLL_START_ADDR "32'h1A10_6000" 
21 46 46 FLL_END_ADDR "32'h1A10_6FFF" 
21 49 49 SOC_CTRL_START_ADDR "32'h1A10_7000" 
21 50 50 SOC_CTRL_END_ADDR "32'h1A10_7FFF" 
21 53 53 DEBUG_START_ADDR "32'h1A11_0000" 
21 54 54 DEBUG_END_ADDR "32'h1A11_7FFF" 
21 56 64 APB_ASSIGN_SLAVE "assign lhs.paddr    = rhs.paddr;       assign lhs.pwdata   = rhs.pwdata;      assign lhs.pwrite   = rhs.pwrite;      assign lhs.psel     = rhs.psel;        assign lhs.penable  = rhs.penable;     assign rhs.prdata   = lhs.prdata;      assign rhs.pready   = lhs.pready;      assign rhs.pslverr  = lhs.pslverr;" 
21 66 66 APB_ASSIGN_MASTER "`APB_ASSIGN_SLAVE(rhs, lhs)" 
24 14 14 ADR_MAX_ADR "2'd2" 
24 16 16 IRQ "2'b00" 
24 17 17 EVENT "2'b01" 
24 18 18 SLEEP "2'b10" 
24 21 21 REGS_MAX_IDX "'d3" 
24 22 22 REGS_MAX_ADR "'d2" 
24 24 24 REG_ENABLE "2'b00" 
24 25 25 REG_PENDING "2'b01" 
24 26 26 REG_SET_PENDING "2'b10" 
24 27 27 REG_CLEAR_PENDING "2'b11" 
24 29 29 REGS_SLEEP_MAX_IDX "'d1" 
24 31 31 REG_SLEEP_CTRL "2'b0" 
24 32 32 REG_SLEEP_STATUS "2'b1" 
24 34 34 SLEEP_ENABLE "5'b0" 
24 35 35 SLEEP_STATUS "5'b0" 
26 11 11 REG_PADDIR_00_31 "5'b00000" 
26 12 12 REG_GPIOEN_00_31 "5'b00001" 
26 13 13 REG_PADIN_00_31 "5'b00010" 
26 14 14 REG_PADOUT_00_31 "5'b00011" 
26 15 15 REG_PADOUTSET_00_31 "5'b00100" 
26 16 16 REG_PADOUTCLR_00_31 "5'b00101" 
26 17 17 REG_INTEN_00_31 "5'b00110" 
26 18 18 REG_INTTYPE_00_15 "5'b00111" 
26 19 19 REG_INTTYPE_16_31 "5'b01000" 
26 20 20 REG_INTSTATUS_00_31 "5'b01001" 
26 21 21 REG_PADCFG_00_07 "5'b01010" 
26 22 22 REG_PADCFG_08_15 "5'b01011" 
26 23 23 REG_PADCFG_16_23 "5'b01100" 
26 24 24 REG_PADCFG_24_31 "5'b01101" 
26 26 26 REG_PADDIR_32_63 "5'b01110" 
26 27 27 REG_GPIOEN_32_63 "5'b01111" 
26 28 28 REG_PADIN_32_63 "5'b10000" 
26 29 29 REG_PADOUT_32_63 "5'b10001" 
26 30 30 REG_PADOUTSET_32_63 "5'b10010" 
26 31 31 REG_PADOUTCLR_32_63 "5'b10011" 
26 32 32 REG_INTEN_32_63 "5'b10100" 
26 33 33 REG_INTTYPE_32_47 "5'b10101" 
26 34 34 REG_INTTYPE_48_63 "5'b10110" 
26 35 35 REG_INTSTATUS_32_63 "5'b10111" 
26 36 36 REG_PADCFG_32_39 "5'b11000" 
26 37 37 REG_PADCFG_40_47 "5'b11001" 
26 38 38 REG_PADCFG_48_55 "5'b11010" 
26 39 39 REG_PADCFG_56_63 "5'b11011" 
28 55 55 I2C_CMD_NOP "4'b0000" 
28 56 56 I2C_CMD_START "4'b0001" 
28 57 57 I2C_CMD_STOP "4'b0010" 
28 58 58 I2C_CMD_WRITE "4'b0100" 
28 59 59 I2C_CMD_READ "4'b1000" 
27 3 3 REG_CLK_PRESCALER "4'b000" 
27 4 4 REG_CTRL "4'b001" 
27 5 5 REG_RX "4'b010" 
27 6 6 REG_STATUS "4'b011" 
27 7 7 REG_TX "4'b100" 
27 8 8 REG_CMD "4'b101" 
32 13 13 REG_PAD_MUX "4'b0000" 
32 14 14 REG_CLK_GATE "4'b0001" 
32 15 15 REG_BOOT_ADR "4'b0010" 
32 16 16 REG_INFO "4'b0100" 
32 17 17 REG_STATUS "4'b0101" 
32 20 20 REG_PADCFG0 "4'b1000" 
32 21 21 REG_PADCFG1 "4'b1001" 
32 22 22 REG_PADCFG2 "4'b1010" 
32 23 23 REG_PADCFG3 "4'b1011" 
32 24 24 REG_PADCFG4 "4'b1100" 
32 25 25 REG_PADCFG5 "4'b1101" 
32 26 26 REG_PADCFG6 "4'b1110" 
32 27 27 REG_PADCFG7 "4'b1111" 
32 30 30 VERSION "5'b00010" 
32 31 31 DATA_RAM "8'b00000100" 
32 32 32 INSTR_RAM "8'b00000100" 
32 33 33 ROM "5'b00000" 
32 34 34 ICACHE "1'b0" 
32 35 35 DCACHE "1'b0" 
33 11 11 log2 "((VALUE) < ( 1 ) ? 0 : (VALUE) < ( 2 ) ? 1 : (VALUE) < ( 4 ) ? 2 : (VALUE) < ( 8 ) ? 3 : (VALUE) < ( 16 )  ? 4 : (VALUE) < ( 32 )  ? 5 : (VALUE) < ( 64 )  ? 6 : (VALUE) < ( 128 ) ? 7 : (VALUE) < ( 256 ) ? 8 : (VALUE) < ( 512 ) ? 9 : (VALUE) < ( 1024 ) ? 10 : (VALUE) < ( 2048 ) ? 11 : (VALUE) < ( 4096 ) ? 12 : (VALUE) < ( 8192 ) ? 13 : (VALUE) < ( 16384 ) ? 14 : (VALUE) < ( 32768 ) ? 15 : (VALUE) < ( 65536 ) ? 16 : (VALUE) < ( 131072 ) ? 17 : (VALUE) < ( 262144 ) ? 18 : (VALUE) < ( 524288 ) ? 19 : (VALUE) < ( 1048576 ) ? 20 : (VALUE) < ( 1048576 * 2 ) ? 21 : (VALUE) < ( 1048576 * 4 ) ? 22 : (VALUE) < ( 1048576 * 8 ) ? 23 : (VALUE) < ( 1048576 * 16 ) ? 24 : 25)" 
35 14 14 ADR_MAX_ADR "2'd2" 
35 16 16 IRQ "2'b00" 
35 17 17 EVENT "2'b01" 
35 18 18 SLEEP "2'b10" 
35 21 21 REGS_MAX_IDX "'d3" 
35 22 22 REGS_MAX_ADR "'d2" 
35 24 24 REG_ENABLE "2'b00" 
35 25 25 REG_PENDING "2'b01" 
35 26 26 REG_SET_PENDING "2'b10" 
35 27 27 REG_CLEAR_PENDING "2'b11" 
35 29 29 REGS_SLEEP_MAX_IDX "'d1" 
35 31 31 REG_SLEEP_CTRL "2'b0" 
35 32 32 REG_SLEEP_STATUS "2'b1" 
35 34 34 SLEEP_ENABLE "5'b0" 
35 35 35 SLEEP_STATUS "5'b0" 
38 12 11 APU "" 
39 16 16 REG_S1 "19:15" 
39 17 17 REG_S2 "24:20" 
39 18 18 REG_S3 "29:25" 
39 19 19 REG_D "11:07" 
39 21 21 REG_RM "14:12" 
39 23 31 USE_APU_DSP_MULT "if (SHARED_DSP_MULT) begin                             mult_int_en     = 1'b0;                             mult_dot_en     = 1'b0;                             apu_en          = 1'b1;                             apu_type_o      = APUTYPE_DSP_MULT;                             apu_flags_src_o = APU_FLAGS_DSP_MULT;                             apu_op_o        = mult_operator_o;                             apu_lat_o       = (PIPE_REG_DSP_MULT==1) ? 2'h2 : 2'h1;                          end" 
39 33 41 USE_APU_INT_MULT "if (SHARED_INT_MULT) begin                             mult_int_en     = 1'b0;                             mult_dot_en     = 1'b0;                             apu_en          = 1'b1;                             apu_flags_src_o = APU_FLAGS_INT_MULT;                             apu_op_o        = mult_operator_o;                             apu_type_o      = APUTYPE_INT_MULT;                             apu_lat_o       = 2'h1;                          end" 
39 43 49 USE_APU_INT_DIV "if (SHARED_INT_DIV) begin                            alu_en = 1'b0;                            apu_en = 1'b1;                            apu_type_o = APUTYPE_INT_DIV;                            apu_op_o = alu_operator_o;                            apu_lat_o       = 2'h3;                          end" 
39 51 60 FP_2OP "if (FPU==1) begin                  apu_en              = 1'b1;                  alu_en_o            = 1'b0;                  apu_flags_src_o     = APU_FLAGS_FP;                  rega_used_o         = 1'b1;                  regb_used_o         = 1'b1;                  reg_fp_a_o          = 1'b1;                  reg_fp_b_o          = 1'b1;                  reg_fp_d_o          = 1'b1;                end" 
39 62 74 FP_3OP "if (FPU==1) begin                  apu_en              = 1'b1;                  alu_en_o            = 1'b0;                  apu_flags_src_o     = apu_core_package::APU_FLAGS_FP;                  rega_used_o         = 1'b1;                  regb_used_o         = 1'b1;                  regc_used_o         = 1'b1;                  reg_fp_a_o          = 1'b1;                  reg_fp_b_o          = 1'b1;                  reg_fp_c_o          = 1'b1;                  reg_fp_d_o          = 1'b1;                  regc_mux_o          = REGC_S4;                end" 
40 15 15 OKAY "2'b00" 
40 16 16 EXOKAY "2'b01" 
40 17 17 SLVERR "2'b10" 
40 18 18 DECERR "2'b11" 
42 12 12 AXI_BUS_SV "" 
42 21 21 OKAY "2'b00" 
69 11 11 OKAY "2'b00" 
69 12 12 EXOKAY "2'b01" 
69 13 13 SLVERR "2'b10" 
69 14 14 DECERR "2'b11" 
79 11 11 OKAY "2'b00" 
79 12 12 EXOKAY "2'b01" 
79 13 13 SLVERR "2'b10" 
79 14 14 DECERR "2'b11" 
89 11 11 OKAY "2'b00" 
89 12 12 EXOKAY "2'b01" 
89 13 13 SLVERR "2'b10" 
89 14 14 DECERR "2'b11" 
101 12 12 DEBUG_BUS_SV "" 
103 14 14 ADR_MAX_ADR "2'd2" 
103 16 16 IRQ "2'b00" 
103 17 17 EVENT "2'b01" 
103 18 18 SLEEP "2'b10" 
103 21 21 REGS_MAX_IDX "'d3" 
103 22 22 REGS_MAX_ADR "'d2" 
103 24 24 REG_ENABLE "2'b00" 
103 25 25 REG_PENDING "2'b01" 
103 26 26 REG_SET_PENDING "2'b10" 
103 27 27 REG_CLEAR_PENDING "2'b11" 
103 29 29 REGS_SLEEP_MAX_IDX "'d1" 
103 31 31 REG_SLEEP_CTRL "2'b0" 
103 32 32 REG_SLEEP_STATUS "2'b1" 
103 34 34 SLEEP_ENABLE "5'b0" 
103 35 35 SLEEP_STATUS "5'b0" 
111 14 14 ADR_MAX_ADR "2'd2" 
111 16 16 IRQ "2'b00" 
111 17 17 EVENT "2'b01" 
111 18 18 SLEEP "2'b10" 
111 21 21 REGS_MAX_IDX "'d3" 
111 22 22 REGS_MAX_ADR "'d2" 
111 24 24 REG_ENABLE "2'b00" 
111 25 25 REG_PENDING "2'b01" 
111 26 26 REG_SET_PENDING "2'b10" 
111 27 27 REG_CLEAR_PENDING "2'b11" 
111 29 29 REGS_SLEEP_MAX_IDX "'d1" 
111 31 31 REG_SLEEP_CTRL "2'b0" 
111 32 32 REG_SLEEP_STATUS "2'b1" 
111 34 34 SLEEP_ENABLE "5'b0" 
111 35 35 SLEEP_STATUS "5'b0" 
113 55 55 I2C_CMD_NOP "4'b0000" 
113 56 56 I2C_CMD_START "4'b0001" 
113 57 57 I2C_CMD_STOP "4'b0010" 
113 58 58 I2C_CMD_WRITE "4'b0100" 
113 59 59 I2C_CMD_READ "4'b1000" 
115 55 55 I2C_CMD_NOP "4'b0000" 
115 56 56 I2C_CMD_START "4'b0001" 
115 57 57 I2C_CMD_STOP "4'b0010" 
115 58 58 I2C_CMD_WRITE "4'b0100" 
115 59 59 I2C_CMD_READ "4'b1000" 
116 55 55 I2C_CMD_NOP "4'b0000" 
116 56 56 I2C_CMD_START "4'b0001" 
116 57 57 I2C_CMD_STOP "4'b0010" 
116 58 58 I2C_CMD_WRITE "4'b0100" 
116 59 59 I2C_CMD_READ "4'b1000" 
131 14 14 AXI_ADDR_WIDTH "32" 
131 15 15 AXI_DATA_WIDTH "32" 
131 16 16 AXI_ID_MASTER_WIDTH "2" 
131 17 17 AXI_ID_SLAVE_WIDTH "4" 
131 18 18 AXI_USER_WIDTH "1" 
152 29 29 ASIC_SYNTHESIS "" 
152 168 168 MSTATUS_UIE_BITS "0" 
152 169 169 MSTATUS_SIE_BITS "1" 
152 170 170 MSTATUS_MIE_BITS "3" 
152 171 171 MSTATUS_UPIE_BITS "4" 
152 172 172 MSTATUS_SPIE_BITS "5" 
152 173 173 MSTATUS_MPIE_BITS "7" 
152 174 174 MSTATUS_SPP_BITS "8" 
152 175 175 MSTATUS_MPP_BITS "12:11" 
152 176 176 MSTATUS_MPRV_BITS "17" 
155 16 16 REG_S1 "19:15" 
155 17 17 REG_S2 "24:20" 
155 18 18 REG_S3 "29:25" 
155 19 19 REG_D "11:07" 
155 21 21 REG_RM "14:12" 
155 23 31 USE_APU_DSP_MULT "if (SHARED_DSP_MULT) begin                             mult_int_en     = 1'b0;                             mult_dot_en     = 1'b0;                             apu_en          = 1'b1;                             apu_type_o      = APUTYPE_DSP_MULT;                             apu_flags_src_o = APU_FLAGS_DSP_MULT;                             apu_op_o        = mult_operator_o;                             apu_lat_o       = (PIPE_REG_DSP_MULT==1) ? 2'h2 : 2'h1;                          end" 
155 33 41 USE_APU_INT_MULT "if (SHARED_INT_MULT) begin                             mult_int_en     = 1'b0;                             mult_dot_en     = 1'b0;                             apu_en          = 1'b1;                             apu_flags_src_o = APU_FLAGS_INT_MULT;                             apu_op_o        = mult_operator_o;                             apu_type_o      = APUTYPE_INT_MULT;                             apu_lat_o       = 2'h1;                          end" 
155 43 49 USE_APU_INT_DIV "if (SHARED_INT_DIV) begin                            alu_en = 1'b0;                            apu_en = 1'b1;                            apu_type_o = APUTYPE_INT_DIV;                            apu_op_o = alu_operator_o;                            apu_lat_o       = 2'h3;                          end" 
155 51 60 FP_2OP "if (FPU==1) begin                  apu_en              = 1'b1;                  alu_en_o            = 1'b0;                  apu_flags_src_o     = APU_FLAGS_FP;                  rega_used_o         = 1'b1;                  regb_used_o         = 1'b1;                  reg_fp_a_o          = 1'b1;                  reg_fp_b_o          = 1'b1;                  reg_fp_d_o          = 1'b1;                end" 
155 62 74 FP_3OP "if (FPU==1) begin                  apu_en              = 1'b1;                  alu_en_o            = 1'b0;                  apu_flags_src_o     = apu_core_package::APU_FLAGS_FP;                  rega_used_o         = 1'b1;                  regb_used_o         = 1'b1;                  regc_used_o         = 1'b1;                  reg_fp_a_o          = 1'b1;                  reg_fp_b_o          = 1'b1;                  reg_fp_c_o          = 1'b1;                  reg_fp_d_o          = 1'b1;                  regc_mux_o          = REGC_S4;                end" 
157 16 16 REG_S1 "19:15" 
157 17 17 REG_S2 "24:20" 
157 18 18 REG_S3 "29:25" 
157 19 19 REG_D "11:07" 
157 21 21 REG_RM "14:12" 
157 23 31 USE_APU_DSP_MULT "if (SHARED_DSP_MULT) begin                             mult_int_en     = 1'b0;                             mult_dot_en     = 1'b0;                             apu_en          = 1'b1;                             apu_type_o      = APUTYPE_DSP_MULT;                             apu_flags_src_o = APU_FLAGS_DSP_MULT;                             apu_op_o        = mult_operator_o;                             apu_lat_o       = (PIPE_REG_DSP_MULT==1) ? 2'h2 : 2'h1;                          end" 
157 33 41 USE_APU_INT_MULT "if (SHARED_INT_MULT) begin                             mult_int_en     = 1'b0;                             mult_dot_en     = 1'b0;                             apu_en          = 1'b1;                             apu_flags_src_o = APU_FLAGS_INT_MULT;                             apu_op_o        = mult_operator_o;                             apu_type_o      = APUTYPE_INT_MULT;                             apu_lat_o       = 2'h1;                          end" 
157 43 49 USE_APU_INT_DIV "if (SHARED_INT_DIV) begin                            alu_en = 1'b0;                            apu_en = 1'b1;                            apu_type_o = APUTYPE_INT_DIV;                            apu_op_o = alu_operator_o;                            apu_lat_o       = 2'h3;                          end" 
157 51 60 FP_2OP "if (FPU==1) begin                  apu_en              = 1'b1;                  alu_en_o            = 1'b0;                  apu_flags_src_o     = APU_FLAGS_FP;                  rega_used_o         = 1'b1;                  regb_used_o         = 1'b1;                  reg_fp_a_o          = 1'b1;                  reg_fp_b_o          = 1'b1;                  reg_fp_d_o          = 1'b1;                end" 
157 62 74 FP_3OP "if (FPU==1) begin                  apu_en              = 1'b1;                  alu_en_o            = 1'b0;                  apu_flags_src_o     = apu_core_package::APU_FLAGS_FP;                  rega_used_o         = 1'b1;                  regb_used_o         = 1'b1;                  regc_used_o         = 1'b1;                  reg_fp_a_o          = 1'b1;                  reg_fp_b_o          = 1'b1;                  reg_fp_c_o          = 1'b1;                  reg_fp_d_o          = 1'b1;                  regc_mux_o          = REGC_S4;                end" 
161 31 31 REG_S1 "19:15" 
161 32 32 REG_S2 "24:20" 
161 33 33 REG_S4 "31:27" 
161 34 34 REG_D "11:07" 
170 14 14 ADR_MAX_ADR "2'd2" 
170 16 16 IRQ "2'b00" 
170 17 17 EVENT "2'b01" 
170 18 18 SLEEP "2'b10" 
170 21 21 REGS_MAX_IDX "'d3" 
170 22 22 REGS_MAX_ADR "'d2" 
170 24 24 REG_ENABLE "2'b00" 
170 25 25 REG_PENDING "2'b01" 
170 26 26 REG_SET_PENDING "2'b10" 
170 27 27 REG_CLEAR_PENDING "2'b11" 
170 29 29 REGS_SLEEP_MAX_IDX "'d1" 
170 31 31 REG_SLEEP_CTRL "2'b0" 
170 32 32 REG_SLEEP_STATUS "2'b1" 
170 34 34 SLEEP_ENABLE "5'b0" 
170 35 35 SLEEP_STATUS "5'b0" 
171 11 11 log2 "((VALUE) < ( 1 ) ? 0 : (VALUE) < ( 2 ) ? 1 : (VALUE) < ( 4 ) ? 2 : (VALUE) < ( 8 ) ? 3 : (VALUE) < ( 16 )  ? 4 : (VALUE) < ( 32 )  ? 5 : (VALUE) < ( 64 )  ? 6 : (VALUE) < ( 128 ) ? 7 : (VALUE) < ( 256 ) ? 8 : (VALUE) < ( 512 ) ? 9 : (VALUE) < ( 1024 ) ? 10 : (VALUE) < ( 2048 ) ? 11 : (VALUE) < ( 4096 ) ? 12 : (VALUE) < ( 8192 ) ? 13 : (VALUE) < ( 16384 ) ? 14 : (VALUE) < ( 32768 ) ? 15 : (VALUE) < ( 65536 ) ? 16 : (VALUE) < ( 131072 ) ? 17 : (VALUE) < ( 262144 ) ? 18 : (VALUE) < ( 524288 ) ? 19 : (VALUE) < ( 1048576 ) ? 20 : (VALUE) < ( 1048576 * 2 ) ? 21 : (VALUE) < ( 1048576 * 4 ) ? 22 : (VALUE) < ( 1048576 * 8 ) ? 23 : (VALUE) < ( 1048576 * 16 ) ? 24 : 25)" 
171 13 13 REG_STATUS "4'b0000" 
171 14 14 REG_CLKDIV "4'b0001" 
171 15 15 REG_SPICMD "4'b0010" 
171 16 16 REG_SPIADR "4'b0011" 
171 17 17 REG_SPILEN "4'b0100" 
171 18 18 REG_SPIDUM "4'b0101" 
171 19 19 REG_TXFIFO "4'b0110" 
171 20 20 REG_RXFIFO "4'b1000" 
171 21 21 REG_INTCFG "4'b1001" 
171 22 22 REG_INTSTA "4'b1010" 
173 11 11 SPI_STD "2'b00" 
173 12 12 SPI_QUAD_TX "2'b01" 
173 13 13 SPI_QUAD_RX "2'b10" 
174 11 11 log2 "((VALUE) < ( 1 ) ? 0 : (VALUE) < ( 2 ) ? 1 : (VALUE) < ( 4 ) ? 2 : (VALUE) < ( 8 ) ? 3 : (VALUE) < ( 16 )  ? 4 : (VALUE) < ( 32 )  ? 5 : (VALUE) < ( 64 )  ? 6 : (VALUE) < ( 128 ) ? 7 : (VALUE) < ( 256 ) ? 8 : (VALUE) < ( 512 ) ? 9 : (VALUE) < ( 1024 ) ? 10 : (VALUE) < ( 2048 ) ? 11 : (VALUE) < ( 4096 ) ? 12 : (VALUE) < ( 8192 ) ? 13 : (VALUE) < ( 16384 ) ? 14 : (VALUE) < ( 32768 ) ? 15 : (VALUE) < ( 65536 ) ? 16 : (VALUE) < ( 131072 ) ? 17 : (VALUE) < ( 262144 ) ? 18 : (VALUE) < ( 524288 ) ? 19 : (VALUE) < ( 1048576 ) ? 20 : (VALUE) < ( 1048576 * 2 ) ? 21 : (VALUE) < ( 1048576 * 4 ) ? 22 : (VALUE) < ( 1048576 * 8 ) ? 23 : (VALUE) < ( 1048576 * 16 ) ? 24 : 25)" 
179 11 11 SPI_STD "2'b00" 
179 12 12 SPI_QUAD_TX "2'b01" 
179 13 13 SPI_QUAD_RX "2'b10" 
188 13 13 REG_TIMER "2'b00" 
188 14 14 REG_TIMER_CTRL "2'b01" 
188 15 15 REG_CMP "2'b10" 
188 16 16 PRESCALER_STARTBIT "'d3" 
188 17 17 PRESCALER_STOPBIT "'d5" 
188 18 18 ENABLE_BIT "'d0" 
189 14 14 ADR_MAX_ADR "2'd2" 
189 16 16 IRQ "2'b00" 
189 17 17 EVENT "2'b01" 
189 18 18 SLEEP "2'b10" 
189 21 21 REGS_MAX_IDX "'d3" 
189 22 22 REGS_MAX_ADR "'d2" 
189 24 24 REG_ENABLE "2'b00" 
189 25 25 REG_PENDING "2'b01" 
189 26 26 REG_SET_PENDING "2'b10" 
189 27 27 REG_CLEAR_PENDING "2'b11" 
189 29 29 REGS_SLEEP_MAX_IDX "'d1" 
189 31 31 REG_SLEEP_CTRL "2'b0" 
189 32 32 REG_SLEEP_STATUS "2'b1" 
189 34 34 SLEEP_ENABLE "5'b0" 
189 35 35 SLEEP_STATUS "5'b0" 
